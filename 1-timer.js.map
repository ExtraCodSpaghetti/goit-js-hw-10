{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('button');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= Date.now()) {\n      btnStart.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future!',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        messageColor: '#fff',\n        timeout: 5000,\n      });\n    } else {\n      btnStart.disabled = false;\n    }\n  },\n});\n\nbtnStart.disabled = true;\n\nbtnStart.addEventListener('click', () => {\n  btnStart.disabled = true;\n  input.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const timeLeft = userSelectedDate - Date.now();\n\n    if (timeLeft <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay(0, 0, 0, 0);\n      input.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  daysEl.textContent = String(days).padStart(2, '0');\n  hoursEl.textContent = String(hours).padStart(2, '0');\n  minutesEl.textContent = String(minutes).padStart(2, '0');\n  secondsEl.textContent = String(seconds).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n"],"names":["input","btnStart","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","flatpickr","selectedDates","iziToast","timeLeft","updateTimerDisplay","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2FAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAoB,KAExBC,EAAUR,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,GAAoB,KAAK,OAC3BL,EAAS,SAAW,GACpBS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACT,SAAU,WACV,gBAAiB,UACjB,aAAc,OACd,QAAS,GACjB,CAAO,GAEDT,EAAS,SAAW,EAEvB,CACH,CAAC,EAEDA,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAM,SAAW,GAEjBO,EAAoB,YAAY,IAAM,CACpC,MAAMI,EAAWL,EAAmB,KAAK,IAAG,EAE5C,GAAIK,GAAY,EAAG,CACjB,cAAcJ,CAAiB,EAC/BK,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BZ,EAAM,SAAW,GACjB,MACD,CAED,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,CACT,CAAC,EAED,SAASJ,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzDd,EAAO,YAAc,OAAOW,CAAI,EAAE,SAAS,EAAG,GAAG,EACjDV,EAAQ,YAAc,OAAOW,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDV,EAAU,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDV,EAAU,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,CACzD,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA"}